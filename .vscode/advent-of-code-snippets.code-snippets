{
	"solver template": {
		"scope": "rust",
		"prefix": "@solverday",
		"description": "generates the skeleton for solver for the specified day",
		"body": [
			"use advent_of_code_data::registry::{Result, Solver, SolverPart};",
			"use advent_of_code_data::{Answer, Day, Year};",
			"use linkme::distributed_slice;",
			"",
			"use crate::SOLVERS;",
			"",
			"#[distributed_slice(SOLVERS)]",
			"static SOLVER: Solver = Solver {",
			"    day: Day(${1:day}),",
			"    year: Year(${2:year}),",
			"    part_one: SolverPart {",
			"        func: day_${1}_1,",
			"        examples: &[",
			"            //(Answer::Int(0), \"Example input\",)",
			"        ],",
			"    },",
			"    part_two: SolverPart {",
			"        func: day_${1}_2,",
			"        examples: &[",
			"            //(Answer::Int(0), \"Example input\",)",
			"        ],",
			"    },",
			"};",
			"",
			"pub fn day_${1}_1(input: &str) -> Result<Answer> {",
			"    $0",
			"    Err(advent_of_code_data::registry::SolverError::NotFinished)",
			"}",
			"",
			"pub fn day_${1}_2(_input: &str) -> Result<Answer> {",
			"    Err(advent_of_code_data::registry::SolverError::NotFinished)",
			"}"
		]
	}
}